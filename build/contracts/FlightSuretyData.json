{
  "contractName": "FlightSuretyData",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "UpdateOperationalStatus",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback",
      "payable": true
    },
    {
      "inputs": [],
      "name": "isOperational",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "kill",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "setOperationalStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAirline",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "creditInsurees",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"TransferOwnership\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"UpdateOperationalStatus\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditInsurees\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperational\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAirline\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"setOperationalStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buy()\":{\"details\":\"Buy insurance for a flight      \"},\"constructor\":{\"details\":\"Constructor     The deploying account becomes contractOwner\"},\"creditInsurees()\":{\"details\":\"Credits payouts to insurees\"},\"fund()\":{\"details\":\"Initial funding for the insurance. Unless there are too many delayed flights     resulting in insurance payouts, the contract should be self-sustaining      \"},\"isOperational()\":{\"details\":\"Get operating status of contract\",\"returns\":{\"_0\":\"A bool that is the current operating status\"}},\"pay()\":{\"details\":\"Transfers eligible payout funds to insuree      \"},\"registerAirline()\":{\"details\":\"Add an airline to the registration queue     Can only be called from FlightSuretyApp contract      \"},\"setOperationalStatus(bool)\":{\"details\":\"Sets contract operations on/off     * When operational mode is disabled, all write transactions except for this one will fail\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/FlightSuretyData.sol\":\"FlightSuretyData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/FlightSuretyData.sol\":{\"keccak256\":\"0xc73ae9d5f9d295284cea596f2d02066a633502d51f2ad4ca3576686783b48b82\",\"urls\":[\"bzz-raw://2caac1e5e41e5dee2cd9c62ade4fd6a40e0c221edb2332b8c4ed367d76c503a8\",\"dweb:/ipfs/QmWKRgQoS7gwAGc3FWeYZ2VdbdqVLjhfHSmxbCg3NgdyLY\"]},\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/OperationalOwnable.sol\":{\"keccak256\":\"0xfe071b6533cc9789af98d758b863dbc03c28a24d92afaf8baca92a19aa4ad8f9\",\"urls\":[\"bzz-raw://9a8eff2557fbef5578a95e425d3d4a40b04e4569c3e374034dc724c1b7faa5fc\",\"dweb:/ipfs/QmTuWfhQVK4QRTW8TJyN4m26Bzcxk1MygAHA7ss6uNQTHR\"]},\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/SafeMath.sol\":{\"keccak256\":\"0x37347f5c4cca81b73705cb5d11439ab65ccaab169396f82c38cf6603c6fc6c5f\",\"urls\":[\"bzz-raw://696210bc0267b8a1c2eb48510ba5eca3c36ef49e71fd2c01b3cdb1801fbc430b\",\"dweb:/ipfs/QmPNXnRk8L3MopeY1Vh5dJHdbn1mxfZikauMzaQ29U8zVB\"]}},\"version\":1}",
  "bytecode": "0x608060405260016000806101000a81548160ff02191690831515021790555034801561002a57600080fd5b5033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a36107b3806100f86000396000f3fe6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101665780638f32d59b146101bd578063a6f2ae3a146101ec578063b60d4288146101f6578063cd905dff14610200578063f2fde38b1461022f576100ac565b80631b9265b8146100b657806336cee484146100cd57806341c0e1b5146100e45780635122cb38146100fb57806363e29a3f14610138578063715018a61461014f576100ac565b5b6100b4610280565b005b3480156100c257600080fd5b506100cb610282565b005b3480156100d957600080fd5b506100e2610284565b005b3480156100f057600080fd5b506100f9610286565b005b34801561010757600080fd5b506101366004803603602081101561011e57600080fd5b81019080803515159060200190929190505050610319565b005b34801561014457600080fd5b5061014d6103cd565b005b34801561015b57600080fd5b506101646103cf565b005b34801561017257600080fd5b5061017b6104ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c957600080fd5b506101d2610515565b604051808215151515815260200191505060405180910390f35b6101f461056c565b005b6101fe610280565b005b34801561020c57600080fd5b5061021561056e565b604051808215151515815260200191505060405180910390f35b34801561023b57600080fd5b5061027e6004803603602081101561025257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610584565b005b565b565b565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561031757600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b610321610515565b610376576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107346029913960400191505060405180910390fd5b7fb6d5f5457d1c101e27891c7154e37f1578a63e19a5396705b34a4b3596b0cab581604051808215151515815260200191505060405180910390a1806000806101000a81548160ff02191690831515021790555050565b565b6103d7610515565b61042c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107346029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b565b60008060009054906101000a900460ff16905090565b61058c610515565b6105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107346029913960400191505060405180910390fd5b6105ea816105ed565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061075d6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a380600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f6e6c7920746865206f776e65722063616e20706572666f726d2074686973206f7065726174696f6e546865206e6577204f776e65722063616e6e6f7420626520616464726573732030a2646970667358221220cee7f7d64042d60d4091ea8f0301bb5ab4c569c704c305f7cda57e031321323764736f6c63430006040033",
  "deployedBytecode": "0x6080604052600436106100ab5760003560e01c80638da5cb5b116100645780638da5cb5b146101665780638f32d59b146101bd578063a6f2ae3a146101ec578063b60d4288146101f6578063cd905dff14610200578063f2fde38b1461022f576100ac565b80631b9265b8146100b657806336cee484146100cd57806341c0e1b5146100e45780635122cb38146100fb57806363e29a3f14610138578063715018a61461014f576100ac565b5b6100b4610280565b005b3480156100c257600080fd5b506100cb610282565b005b3480156100d957600080fd5b506100e2610284565b005b3480156100f057600080fd5b506100f9610286565b005b34801561010757600080fd5b506101366004803603602081101561011e57600080fd5b81019080803515159060200190929190505050610319565b005b34801561014457600080fd5b5061014d6103cd565b005b34801561015b57600080fd5b506101646103cf565b005b34801561017257600080fd5b5061017b6104ec565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101c957600080fd5b506101d2610515565b604051808215151515815260200191505060405180910390f35b6101f461056c565b005b6101fe610280565b005b34801561020c57600080fd5b5061021561056e565b604051808215151515815260200191505060405180910390f35b34801561023b57600080fd5b5061027e6004803603602081101561025257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610584565b005b565b565b565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561031757600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b610321610515565b610376576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107346029913960400191505060405180910390fd5b7fb6d5f5457d1c101e27891c7154e37f1578a63e19a5396705b34a4b3596b0cab581604051808215151515815260200191505060405180910390a1806000806101000a81548160ff02191690831515021790555050565b565b6103d7610515565b61042c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107346029913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b565b60008060009054906101000a900460ff16905090565b61058c610515565b6105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806107346029913960400191505060405180910390fd5b6105ea816105ed565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061075d6021913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a380600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505056fe4f6e6c7920746865206f776e65722063616e20706572666f726d2074686973206f7065726174696f6e546865206e6577204f776e65722063616e6e6f7420626520616464726573732030a2646970667358221220cee7f7d64042d60d4091ea8f0301bb5ab4c569c704c305f7cda57e031321323764736f6c63430006040033",
  "sourceMap": "93:3030:1:-:0;;;152:4:3;125:31;;;;;;;;;;;;;;;;;;;;887:23:1;5:9:-1;2:2;;;27:1;24;17:12;2:2;887:23:1;508:10:3;492:13;;:26;;;;;;;;;;;;;;;;;;563:13;;;;;;;;;;;533:44;;559:1;533:44;;;;;;;;;;;;93:3030:1;;;;;;",
  "deployedSourceMap": "93:3030:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:6;:4;:6::i;:::-;93:3030;2309:31;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2309:31:1;;;:::i;:::-;;2176:42;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2176:42:1;;;:::i;:::-;;1616:124:3;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1616:124:3;;;:::i;:::-;;1427:139;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1427:139:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1427:139:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;1955:43:1;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1955:43:1;;;:::i;:::-;;2254:148:3;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2254:148:3;;;:::i;:::-;;1786:84;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1786:84:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2105:97;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2105:97:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2074:34:1;;;:::i;:::-;;2852:33;;;:::i;:::-;;1171:87:3;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1171:87:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2462:115;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2462:115:3;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2462:115:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;2852:33:1;:::o;2309:31::-;:::o;2176:42::-;:::o;1616:124:3:-;1667:13;;;;;;;;;;;1653:27;;:10;:27;;;1649:85;;;1709:13;;;;;;;;;;;1696:27;;;1649:85;1616:124::o;1427:139::-;1961:9;:7;:9::i;:::-;1953:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:29:::1;1526:4;1502:29;;;;;;;;;;;;;;;;;;;;;;1555:4;1541:11;::::0;:18:::1;;;;;;;;;;;;;;;;;;1427:139:::0;:::o;1955:43:1:-;:::o;2254:148:3:-;1961:9;:7;:9::i;:::-;1953:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2356:1:::1;2315:44;;2333:13;;;;;;;;;;;2315:44;;;;;;;;;;;;2393:1;2369:13:::0;::::1;:26;;;;;;;;;;;;;;;;;;2254:148::o:0;1786:84::-;1824:7;1850:13;;;;;;;;;;;1843:20;;1786:84;:::o;2105:97::-;2145:4;2182:13;;;;;;;;;;;2168:27;;:10;:27;;;2161:34;;2105:97;:::o;2074:34:1:-;:::o;1171:87:3:-;1217:4;1240:11;;;;;;;;;;;1233:18;;1171:87;:::o;2462:115::-;1961:9;:7;:9::i;:::-;1953:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2542:28:::1;2561:8;2542:18;:28::i;:::-;2462:115:::0;:::o;2640:239::-;2741:1;2721:22;;:8;:22;;;;2713:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2829:8;2796:42;;2814:13;;;;;;;;;;;2796:42;;;;;;;;;;;;2864:8;2848:13;;:24;;;;;;;;;;;;;;;;;;2640:239;:::o",
  "source": "pragma solidity ^0.6.4;\r\n\r\nimport \"./SafeMath.sol\";\r\nimport \"./OperationalOwnable.sol\";\r\n\r\n\r\ncontract FlightSuretyData is OperationalOwnable {\r\n    using SafeMath for uint256;\r\n\r\n    /********************************************************************************************/\r\n    /*                                       DATA VARIABLES                                     */\r\n    /********************************************************************************************/\r\n\r\n    /********************************************************************************************/\r\n    /*                                       EVENT DEFINITIONS                                  */\r\n    /********************************************************************************************/\r\n\r\n    /**\r\n     * @dev Constructor\r\n     *      The deploying account becomes contractOwner\r\n     */\r\n    constructor() public {}\r\n\r\n    /**\r\n     * @dev Fallback function for funding smart contract.\r\n     */\r\n    fallback() external payable {\r\n        fund();\r\n    }\r\n\r\n    /********************************************************************************************/\r\n    /*                                       FUNCTION MODIFIERS                                 */\r\n    /********************************************************************************************/\r\n\r\n    // Modifiers help avoid duplication of code. They are typically used to validate something\r\n    // before a function is allowed to be executed.\r\n\r\n    /********************************************************************************************/\r\n    /*                                     SMART CONTRACT FUNCTIONS                             */\r\n    /********************************************************************************************/\r\n\r\n    /**\r\n     * @dev Add an airline to the registration queue\r\n     *      Can only be called from FlightSuretyApp contract\r\n     *\r\n     */\r\n\r\n    function registerAirline() external pure {}\r\n\r\n    /**\r\n     * @dev Buy insurance for a flight\r\n     *\r\n     */\r\n\r\n    function buy() external payable {}\r\n\r\n    /**\r\n     *  @dev Credits payouts to insurees\r\n     */\r\n    function creditInsurees() external pure {}\r\n\r\n    /**\r\n     *  @dev Transfers eligible payout funds to insuree\r\n     *\r\n     */\r\n    function pay() external pure {}\r\n\r\n    /********************************************************************************************/\r\n    /*                                       UTILITY FUNCTIONS                                  */\r\n    /********************************************************************************************/\r\n\r\n    /**\r\n     * @dev Initial funding for the insurance. Unless there are too many delayed flights\r\n     *      resulting in insurance payouts, the contract should be self-sustaining\r\n     *\r\n     */\r\n\r\n    function fund() public payable {}\r\n\r\n    function getFlightKey(\r\n        address airline,\r\n        string memory flight,\r\n        uint256 timestamp\r\n    ) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(airline, flight, timestamp));\r\n    }\r\n}\r\n",
  "sourcePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/FlightSuretyData.sol",
  "ast": {
    "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        605
      ]
    },
    "id": 606,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 538,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 1031,
        "src": "27:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/OperationalOwnable.sol",
        "file": "./OperationalOwnable.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 835,
        "src": "53:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 541,
              "name": "OperationalOwnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 834,
              "src": "122:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OperationalOwnable_$834",
                "typeString": "contract OperationalOwnable"
              }
            },
            "id": 542,
            "nodeType": "InheritanceSpecifier",
            "src": "122:18:1"
          }
        ],
        "contractDependencies": [
          834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 605,
        "linearizedBaseContracts": [
          605,
          834
        ],
        "name": "FlightSuretyData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 545,
            "libraryName": {
              "contractScope": null,
              "id": 543,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1030,
              "src": "154:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1030",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "148:27:1",
            "typeName": {
              "id": 544,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "167:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "908:2:1",
              "statements": []
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "787:94:1",
              "text": "@dev Constructor\n     The deploying account becomes contractOwner"
            },
            "id": 550,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:1"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:1"
            },
            "scope": 605,
            "src": "887:23:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1023:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 554,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "1034:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:6:1"
                }
              ]
            },
            "documentation": {
              "id": 551,
              "nodeType": "StructuredDocumentation",
              "src": "918:71:1",
              "text": "@dev Fallback function for funding smart contract."
            },
            "id": 558,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:2:1"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:1"
            },
            "scope": 605,
            "src": "995:53:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "1996:2:1",
              "statements": []
            },
            "documentation": {
              "id": 559,
              "nodeType": "StructuredDocumentation",
              "src": "1811:136:1",
              "text": "@dev Add an airline to the registration queue\n     Can only be called from FlightSuretyApp contract\n\n     "
            },
            "functionSelector": "63e29a3f",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAirline",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:1"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:0:1"
            },
            "scope": 605,
            "src": "1955:43:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "2106:2:1",
              "statements": []
            },
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "2006:60:1",
              "text": "@dev Buy insurance for a flight\n\n     "
            },
            "functionSelector": "a6f2ae3a",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2086:2:1"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2106:0:1"
            },
            "scope": 605,
            "src": "2074:34:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "2216:2:1",
              "statements": []
            },
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "2116:54:1",
              "text": " @dev Credits payouts to insurees"
            },
            "functionSelector": "36cee484",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2199:2:1"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:0:1"
            },
            "scope": 605,
            "src": "2176:42:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "2338:2:1",
              "statements": []
            },
            "documentation": {
              "id": 574,
              "nodeType": "StructuredDocumentation",
              "src": "2226:77:1",
              "text": " @dev Transfers eligible payout funds to insuree\n\n     "
            },
            "functionSelector": "1b9265b8",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:2:1"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:0:1"
            },
            "scope": 605,
            "src": "2309:31:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "2883:2:1",
              "statements": []
            },
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "2650:194:1",
              "text": "@dev Initial funding for the insurance. Unless there are too many delayed flights\n     resulting in insurance payouts, the contract should be self-sustaining\n\n     "
            },
            "functionSelector": "b60d4288",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2865:2:1"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2883:0:1"
            },
            "scope": 605,
            "src": "2852:33:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "3039:81:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "3084:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "3093:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "3101:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 595,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3067:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3067:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3067:44:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 594,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3057:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "3050:62:1"
                }
              ]
            },
            "documentation": null,
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "name": "airline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "2925:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "flight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "2951:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "2982:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2914:92:1"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "3030:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3030:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3029:9:1"
            },
            "scope": 605,
            "src": "2893:227:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 606,
        "src": "93:3030:1"
      }
    ],
    "src": "0:3125:1"
  },
  "legacyAST": {
    "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        605
      ]
    },
    "id": 606,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 538,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 539,
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 1031,
        "src": "27:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/contracts/OperationalOwnable.sol",
        "file": "./OperationalOwnable.sol",
        "id": 540,
        "nodeType": "ImportDirective",
        "scope": 606,
        "sourceUnit": 835,
        "src": "53:34:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 541,
              "name": "OperationalOwnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 834,
              "src": "122:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OperationalOwnable_$834",
                "typeString": "contract OperationalOwnable"
              }
            },
            "id": 542,
            "nodeType": "InheritanceSpecifier",
            "src": "122:18:1"
          }
        ],
        "contractDependencies": [
          834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 605,
        "linearizedBaseContracts": [
          605,
          834
        ],
        "name": "FlightSuretyData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 545,
            "libraryName": {
              "contractScope": null,
              "id": 543,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1030,
              "src": "154:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$1030",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "148:27:1",
            "typeName": {
              "id": 544,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "167:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "body": {
              "id": 549,
              "nodeType": "Block",
              "src": "908:2:1",
              "statements": []
            },
            "documentation": {
              "id": 546,
              "nodeType": "StructuredDocumentation",
              "src": "787:94:1",
              "text": "@dev Constructor\n     The deploying account becomes contractOwner"
            },
            "id": 550,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 547,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "898:2:1"
            },
            "returnParameters": {
              "id": 548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "908:0:1"
            },
            "scope": 605,
            "src": "887:23:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 557,
              "nodeType": "Block",
              "src": "1023:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 554,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 583,
                      "src": "1034:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1034:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 556,
                  "nodeType": "ExpressionStatement",
                  "src": "1034:6:1"
                }
              ]
            },
            "documentation": {
              "id": 551,
              "nodeType": "StructuredDocumentation",
              "src": "918:71:1",
              "text": "@dev Fallback function for funding smart contract."
            },
            "id": 558,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 552,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1003:2:1"
            },
            "returnParameters": {
              "id": 553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1023:0:1"
            },
            "scope": 605,
            "src": "995:53:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 562,
              "nodeType": "Block",
              "src": "1996:2:1",
              "statements": []
            },
            "documentation": {
              "id": 559,
              "nodeType": "StructuredDocumentation",
              "src": "1811:136:1",
              "text": "@dev Add an airline to the registration queue\n     Can only be called from FlightSuretyApp contract\n\n     "
            },
            "functionSelector": "63e29a3f",
            "id": 563,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAirline",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1979:2:1"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:0:1"
            },
            "scope": 605,
            "src": "1955:43:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "2106:2:1",
              "statements": []
            },
            "documentation": {
              "id": 564,
              "nodeType": "StructuredDocumentation",
              "src": "2006:60:1",
              "text": "@dev Buy insurance for a flight\n\n     "
            },
            "functionSelector": "a6f2ae3a",
            "id": 568,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2086:2:1"
            },
            "returnParameters": {
              "id": 566,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2106:0:1"
            },
            "scope": 605,
            "src": "2074:34:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 572,
              "nodeType": "Block",
              "src": "2216:2:1",
              "statements": []
            },
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "2116:54:1",
              "text": " @dev Credits payouts to insurees"
            },
            "functionSelector": "36cee484",
            "id": 573,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2199:2:1"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2216:0:1"
            },
            "scope": 605,
            "src": "2176:42:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 577,
              "nodeType": "Block",
              "src": "2338:2:1",
              "statements": []
            },
            "documentation": {
              "id": 574,
              "nodeType": "StructuredDocumentation",
              "src": "2226:77:1",
              "text": " @dev Transfers eligible payout funds to insuree\n\n     "
            },
            "functionSelector": "1b9265b8",
            "id": 578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2321:2:1"
            },
            "returnParameters": {
              "id": 576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:0:1"
            },
            "scope": 605,
            "src": "2309:31:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "2883:2:1",
              "statements": []
            },
            "documentation": {
              "id": 579,
              "nodeType": "StructuredDocumentation",
              "src": "2650:194:1",
              "text": "@dev Initial funding for the insurance. Unless there are too many delayed flights\n     resulting in insurance payouts, the contract should be self-sustaining\n\n     "
            },
            "functionSelector": "b60d4288",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2865:2:1"
            },
            "returnParameters": {
              "id": 581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2883:0:1"
            },
            "scope": 605,
            "src": "2852:33:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 603,
              "nodeType": "Block",
              "src": "3039:81:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 597,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 585,
                            "src": "3084:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 598,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 587,
                            "src": "3093:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 599,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 589,
                            "src": "3101:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 595,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3067:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3067:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3067:44:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 594,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3057:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3057:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 593,
                  "id": 602,
                  "nodeType": "Return",
                  "src": "3050:62:1"
                }
              ]
            },
            "documentation": null,
            "id": 604,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 590,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 585,
                  "name": "airline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "2925:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 584,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2925:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 587,
                  "name": "flight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "2951:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 586,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2951:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 589,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "2982:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 588,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2982:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2914:92:1"
            },
            "returnParameters": {
              "id": 593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 592,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 604,
                  "src": "3030:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 591,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3030:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3029:9:1"
            },
            "scope": 605,
            "src": "2893:227:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 606,
        "src": "93:3030:1"
      }
    ],
    "src": "0:3125:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "oldOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "TransferOwnership",
          "type": "event"
        },
        "0xb6d5f5457d1c101e27891c7154e37f1578a63e19a5396705b34a4b3596b0cab5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "bool",
              "name": "mode",
              "type": "bool"
            }
          ],
          "name": "UpdateOperationalStatus",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x140610606c13e1Ff7f63A879541aaC0312413091",
      "transactionHash": "0xd24b06cc17d8e5a6c2550dd00aef3a3e1fb477a2d4d40c70ab43eb963597a959"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-19T23:53:32.198Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "buy()": {
        "details": "Buy insurance for a flight      "
      },
      "constructor": {
        "details": "Constructor     The deploying account becomes contractOwner"
      },
      "creditInsurees()": {
        "details": "Credits payouts to insurees"
      },
      "fund()": {
        "details": "Initial funding for the insurance. Unless there are too many delayed flights     resulting in insurance payouts, the contract should be self-sustaining      "
      },
      "isOperational()": {
        "details": "Get operating status of contract",
        "returns": {
          "_0": "A bool that is the current operating status"
        }
      },
      "pay()": {
        "details": "Transfers eligible payout funds to insuree      "
      },
      "registerAirline()": {
        "details": "Add an airline to the registration queue     Can only be called from FlightSuretyApp contract      "
      },
      "setOperationalStatus(bool)": {
        "details": "Sets contract operations on/off     * When operational mode is disabled, all write transactions except for this one will fail"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}