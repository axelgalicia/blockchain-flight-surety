{
  "contractName": "FlightSuretyData",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "mode",
          "type": "bool"
        }
      ],
      "name": "setOperatingStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "registerAirline",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buy",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creditInsurees",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pay",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOperational",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"buy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creditInsurees\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOperational\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pay\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAirline\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"mode\",\"type\":\"bool\"}],\"name\":\"setOperatingStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"buy()\":{\"details\":\"Buy insurance for a flight     \"},\"constructor\":{\"details\":\"Constructor     The deploying account becomes contractOwner\"},\"creditInsurees()\":{\"details\":\"Credits payouts to insurees\"},\"fund()\":{\"details\":\"Initial funding for the insurance. Unless there are too many delayed flights     resulting in insurance payouts, the contract should be self-sustaining     \"},\"isOperational()\":{\"details\":\"Get operating status of contract \",\"returns\":{\"_0\":\"A bool that is the current operating status\"}},\"pay()\":{\"details\":\"Transfers eligible payout funds to insuree     \"},\"registerAirline()\":{\"details\":\"Add an airline to the registration queue     Can only be called from FlightSuretyApp contract     \"},\"setOperatingStatus(bool)\":{\"details\":\"Sets contract operations on/off     * When operational mode is disabled, all write transactions except for this one will fail\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/FlightSuretyData.sol\":\"FlightSuretyData\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/FlightSuretyData.sol\":{\"keccak256\":\"0x7d5c121c8e244e9332840d396dc0933c1eff24766a16d4b962d1fb1f1b7f8d26\",\"urls\":[\"bzz-raw://90872ca234609ce20f2177dfdedb8016a4ec9e9ee6a03c0c58f4b6c7e539c606\",\"dweb:/ipfs/QmTLSFAWanQagoQxorPwacRsiS8P89FLA6AoJXiupkzDDV\"]},\"/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/SafeMath.sol\":{\"keccak256\":\"0xc4b33a06dc3311b67034afe995c06cfcdab590becfb2ee7c19632e1d2c42451c\",\"urls\":[\"bzz-raw://112306bf371af1d433741c7bac1a75b848a65d12c42bb4e792935a7f0ec83f15\",\"dweb:/ipfs/QmTRiUYrDPJvGu44t5DnSjxMzfqURFefJn4oXwqXvCznKv\"]}},\"version\":1}",
  "bytecode": "0x60806040526001600060146101000a81548160ff02191690831515021790555034801561002b57600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506102798061007b6000396000f3fe6080604052600436106100745760003560e01c806363e29a3f1161004e57806363e29a3f146100ea578063a6f2ae3a14610101578063b60d42881461010b578063cd905dff1461011557610075565b8063110466ed1461007f5780631b9265b8146100bc57806336cee484146100d357610075565b5b61007d610144565b005b34801561008b57600080fd5b506100ba600480360360208110156100a257600080fd5b81019080803515159060200190929190505050610146565b005b3480156100c857600080fd5b506100d1610225565b005b3480156100df57600080fd5b506100e8610227565b005b3480156100f657600080fd5b506100ff610229565b005b61010961022b565b005b610113610144565b005b34801561012157600080fd5b5061012a61022d565b604051808215151515815260200191505060405180910390f35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610208576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b565b565b565b565b60008060149054906101000a900460ff1690509056fea264697066735822122033871b3f1ae78a8c5e74037744c3361923564c3ef9d6d94f3534acd10dae73b764736f6c63430006040033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c806363e29a3f1161004e57806363e29a3f146100ea578063a6f2ae3a14610101578063b60d42881461010b578063cd905dff1461011557610075565b8063110466ed1461007f5780631b9265b8146100bc57806336cee484146100d357610075565b5b61007d610144565b005b34801561008b57600080fd5b506100ba600480360360208110156100a257600080fd5b81019080803515159060200190929190505050610146565b005b3480156100c857600080fd5b506100d1610225565b005b3480156100df57600080fd5b506100e8610227565b005b3480156100f657600080fd5b506100ff610229565b005b61010961022b565b005b610113610144565b005b34801561012157600080fd5b5061012a61022d565b604051808215151515815260200191505060405180910390f35b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610208576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f43616c6c6572206973206e6f7420636f6e7472616374206f776e65720000000081525060200191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555050565b565b565b565b565b60008060149054906101000a900460ff1690509056fea264697066735822122033871b3f1ae78a8c5e74037744c3361923564c3ef9d6d94f3534acd10dae73b764736f6c63430006040033",
  "sourceMap": "55:4555:1:-:0;;;560:4;533:31;;;;;;;;;;;;;;;;;;;;1070:66;5:9:-1;2:2;;;27:1;24;17:12;2:2;1070:66:1;1118:10;1102:13;;:26;;;;;;;;;;;;;;;;;;55:4555;;;;;;",
  "deployedSourceMap": "55:4555:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1258:6;:4;:6::i;:::-;55:4555;2612:108;;5:9:-1;2:2;;;27:1;24;17:12;2:2;2612:108:1;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;2612:108:1;;;;;;;;;;;;;;;;;;;:::i;:::-;;3547:37;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3547:37:1;;;:::i;:::-;;3403:48;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3403:48:1;;;:::i;:::-;;3170:49;;5:9:-1;2:2;;;27:1;24;17:12;2:2;3170:49:1;;;:::i;:::-;;3294:42;;;:::i;:::-;;4338:39;;;:::i;:::-;;4028:104;;5:9:-1;2:2;;;27:1;24;17:12;2:2;4028:104:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4338:39;:::o;2612:108::-;2369:13;;;;;;;;;;;2355:27;;:10;:27;;;2347:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:4:::1;2694:11;;:18;;;;;;;;;;;;;;;;;;2612:108:::0;:::o;3547:37::-;:::o;3403:48::-;:::o;3170:49::-;:::o;3294:42::-;:::o;4028:104::-;4083:4;4113:11;;;;;;;;;;;4106:18;;4028:104;:::o",
  "source": "pragma solidity ^0.6.4;\r\n\r\nimport \"./SafeMath.sol\";\r\n\r\ncontract FlightSuretyData {\r\n    using SafeMath for uint256;\r\n\r\n    /********************************************************************************************/\r\n    /*                                       DATA VARIABLES                                     */\r\n    /********************************************************************************************/\r\n\r\n    address private contractOwner;                                      // Account used to deploy contract\r\n    bool private operational = true;                                    // Blocks all state changes throughout the contract if false\r\n\r\n    /********************************************************************************************/\r\n    /*                                       EVENT DEFINITIONS                                  */\r\n    /********************************************************************************************/\r\n\r\n\r\n    /**\r\n    * @dev Constructor\r\n    *      The deploying account becomes contractOwner\r\n    */\r\n    constructor() public {\r\n        contractOwner = msg.sender;\r\n    }\r\n\r\n    /**\r\n    * @dev Fallback function for funding smart contract.\r\n    */\r\n    fallback() external payable {\r\n        fund();\r\n    }\r\n\r\n    /********************************************************************************************/\r\n    /*                                       FUNCTION MODIFIERS                                 */\r\n    /********************************************************************************************/\r\n\r\n    // Modifiers help avoid duplication of code. They are typically used to validate something\r\n    // before a function is allowed to be executed.\r\n\r\n    /**\r\n    * @dev Modifier that requires the \"operational\" boolean variable to be \"true\"\r\n    *      This is used on all state changing functions to pause the contract in \r\n    *      the event there is an issue that needs to be fixed\r\n    */\r\n    modifier requireIsOperational() {\r\n        require(operational, \"Contract is currently not operational\");\r\n        _;  // All modifiers require an \"_\" which indicates where the function body will be added\r\n    }\r\n\r\n    /**\r\n    * @dev Modifier that requires the \"ContractOwner\" account to be the function caller\r\n    */\r\n    modifier requireContractOwner() {\r\n        require(msg.sender == contractOwner, \"Caller is not contract owner\");\r\n        _;\r\n    }\r\n\r\n\r\n    /**\r\n    * @dev Sets contract operations on/off\r\n    *\r\n    * When operational mode is disabled, all write transactions except for this one will fail\r\n    */    \r\n    function setOperatingStatus ( bool mode) external requireContractOwner {\r\n        operational = mode;\r\n    }\r\n\r\n    /********************************************************************************************/\r\n    /*                                     SMART CONTRACT FUNCTIONS                             */\r\n    /********************************************************************************************/\r\n\r\n   /**\r\n    * @dev Add an airline to the registration queue\r\n    *      Can only be called from FlightSuretyApp contract\r\n    *\r\n    */   \r\n    function registerAirline() external pure {\r\n    }\r\n\r\n\r\n   /**\r\n    * @dev Buy insurance for a flight\r\n    *\r\n    */   \r\n    function buy() external payable {\r\n\r\n    }\r\n\r\n    /**\r\n     *  @dev Credits payouts to insurees\r\n    */\r\n    function creditInsurees() external pure {\r\n    }\r\n    \r\n\r\n    /**\r\n     *  @dev Transfers eligible payout funds to insuree\r\n     *\r\n    */\r\n    function pay() external pure {\r\n    }\r\n\r\n    /********************************************************************************************/\r\n    /*                                       UTILITY FUNCTIONS                                  */\r\n    /********************************************************************************************/\r\n\r\n    /**\r\n    * @dev Get operating status of contract\r\n    *\r\n    * @return A bool that is the current operating status\r\n    */      \r\n    function isOperational() public view \r\n        returns(bool) \r\n    {\r\n        return operational;\r\n    }\r\n\r\n   /**\r\n    * @dev Initial funding for the insurance. Unless there are too many delayed flights\r\n    *      resulting in insurance payouts, the contract should be self-sustaining\r\n    *\r\n    */   \r\n    function fund() public payable {\r\n    }\r\n\r\n    function getFlightKey(\r\n        address airline,\r\n        string memory flight,\r\n        uint256 timestamp) internal pure returns(bytes32) {\r\n        return keccak256(abi.encodePacked(airline, flight, timestamp));\r\n    }\r\n\r\n}\r\n\r\n",
  "sourcePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/FlightSuretyData.sol",
  "ast": {
    "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        668
      ]
    },
    "id": 669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 549,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 550,
        "nodeType": "ImportDirective",
        "scope": 669,
        "sourceUnit": 922,
        "src": "27:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 668,
        "linearizedBaseContracts": [
          668
        ],
        "name": "FlightSuretyData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 553,
            "libraryName": {
              "contractScope": null,
              "id": 551,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 921,
              "src": "94:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$921",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "88:27:1",
            "typeName": {
              "id": 552,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "107:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 555,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 668,
            "src": "425:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 554,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "425:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 558,
            "name": "operational",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 668,
            "src": "533:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 556,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "533:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 557,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:4:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "1091:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1102:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 563,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1118:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1118:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1102:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:26:1"
                }
              ]
            },
            "documentation": {
              "id": 559,
              "nodeType": "StructuredDocumentation",
              "src": "973:91:1",
              "text": "@dev Constructor\n     The deploying account becomes contractOwner"
            },
            "id": 568,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:1"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:1"
            },
            "scope": 668,
            "src": "1070:66:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "1247:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 572,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "1258:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:6:1"
                }
              ]
            },
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "1144:69:1",
              "text": "@dev Fallback function for funding smart contract."
            },
            "id": 576,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:1"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:0:1"
            },
            "scope": 668,
            "src": "1219:53:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "2011:179:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "operational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "2030:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616c",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        },
                        "value": "Contract is currently not operational"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:61:1"
                },
                {
                  "id": 584,
                  "nodeType": "PlaceholderStatement",
                  "src": "2094:1:1"
                }
              ]
            },
            "documentation": {
              "id": 577,
              "nodeType": "StructuredDocumentation",
              "src": "1733:240:1",
              "text": "@dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n     This is used on all state changing functions to pause the contract in \n     the event there is an issue that needs to be fixed"
            },
            "id": 586,
            "name": "requireIsOperational",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:2:1"
            },
            "src": "1979:211:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "2336:99:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 590,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2355:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2355:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "2369:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2355:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        },
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2347:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:68:1"
                },
                {
                  "id": 597,
                  "nodeType": "PlaceholderStatement",
                  "src": "2426:1:1"
                }
              ]
            },
            "documentation": {
              "id": 587,
              "nodeType": "StructuredDocumentation",
              "src": "2198:100:1",
              "text": "@dev Modifier that requires the \"ContractOwner\" account to be the function caller"
            },
            "id": 599,
            "name": "requireContractOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:2:1"
            },
            "src": "2304:131:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "2683:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 607,
                      "name": "operational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "2694:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "2708:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2694:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:18:1"
                }
              ]
            },
            "documentation": {
              "id": 600,
              "nodeType": "StructuredDocumentation",
              "src": "2445:157:1",
              "text": "@dev Sets contract operations on/off\n\n    * When operational mode is disabled, all write transactions except for this one will fail"
            },
            "functionSelector": "110466ed",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 605,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 604,
                  "name": "requireContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 599,
                  "src": "2662:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2662:20:1"
              }
            ],
            "name": "setOperatingStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "name": "mode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 612,
                  "src": "2642:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2640:12:1"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:0:1"
            },
            "scope": 668,
            "src": "2612:108:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "3211:8:1",
              "statements": []
            },
            "documentation": {
              "id": 613,
              "nodeType": "StructuredDocumentation",
              "src": "3029:132:1",
              "text": "@dev Add an airline to the registration queue\n     Can only be called from FlightSuretyApp contract\n\n    "
            },
            "functionSelector": "63e29a3f",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAirline",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3194:2:1"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3211:0:1"
            },
            "scope": 668,
            "src": "3170:49:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "3326:10:1",
              "statements": []
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "3228:57:1",
              "text": "@dev Buy insurance for a flight\n\n    "
            },
            "functionSelector": "a6f2ae3a",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3306:2:1"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3326:0:1"
            },
            "scope": 668,
            "src": "3294:42:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "3443:8:1",
              "statements": []
            },
            "documentation": {
              "id": 623,
              "nodeType": "StructuredDocumentation",
              "src": "3344:53:1",
              "text": " @dev Credits payouts to insurees"
            },
            "functionSelector": "36cee484",
            "id": 627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3426:2:1"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3443:0:1"
            },
            "scope": 668,
            "src": "3403:48:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "3576:8:1",
              "statements": []
            },
            "documentation": {
              "id": 628,
              "nodeType": "StructuredDocumentation",
              "src": "3465:76:1",
              "text": " @dev Transfers eligible payout funds to insuree\n\n    "
            },
            "functionSelector": "1b9265b8",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:2:1"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:0:1"
            },
            "scope": 668,
            "src": "3547:37:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 640,
              "nodeType": "Block",
              "src": "4095:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 638,
                    "name": "operational",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 558,
                    "src": "4113:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 637,
                  "id": 639,
                  "nodeType": "Return",
                  "src": "4106:18:1"
                }
              ]
            },
            "documentation": {
              "id": 633,
              "nodeType": "StructuredDocumentation",
              "src": "3894:122:1",
              "text": "@dev Get operating status of contract\n\n    * @return A bool that is the current operating status"
            },
            "functionSelector": "cd905dff",
            "id": 641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperational",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4050:2:1"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 641,
                  "src": "4083:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4083:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4082:6:1"
            },
            "scope": 668,
            "src": "4028:104:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "4369:8:1",
              "statements": []
            },
            "documentation": {
              "id": 642,
              "nodeType": "StructuredDocumentation",
              "src": "4139:190:1",
              "text": "@dev Initial funding for the insurance. Unless there are too many delayed flights\n     resulting in insurance payouts, the contract should be self-sustaining\n\n    "
            },
            "functionSelector": "b60d4288",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4351:2:1"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4369:0:1"
            },
            "scope": 668,
            "src": "4338:39:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "4524:81:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 660,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "4569:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 661,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "4578:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 662,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "4586:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 658,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4552:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4552:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4552:44:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 657,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4542:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4542:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 665,
                  "nodeType": "Return",
                  "src": "4535:62:1"
                }
              ]
            },
            "documentation": null,
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "name": "airline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4417:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "name": "flight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4443:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4474:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4406:86:1"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4515:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4515:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4514:9:1"
            },
            "scope": 668,
            "src": "4385:220:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 669,
        "src": "55:4555:1"
      }
    ],
    "src": "0:4614:1"
  },
  "legacyAST": {
    "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/FlightSuretyData.sol",
    "exportedSymbols": {
      "FlightSuretyData": [
        668
      ]
    },
    "id": 669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 549,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "/media/indigo/backup/AXEL/Personal/Tutorials/blocksurety/blockchain-flight-surety/flight-app/contracts/SafeMath.sol",
        "file": "./SafeMath.sol",
        "id": 550,
        "nodeType": "ImportDirective",
        "scope": 669,
        "sourceUnit": 922,
        "src": "27:24:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 668,
        "linearizedBaseContracts": [
          668
        ],
        "name": "FlightSuretyData",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 553,
            "libraryName": {
              "contractScope": null,
              "id": 551,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 921,
              "src": "94:8:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$921",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "88:27:1",
            "typeName": {
              "id": 552,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "107:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 555,
            "name": "contractOwner",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 668,
            "src": "425:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 554,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "425:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 558,
            "name": "operational",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 668,
            "src": "533:31:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 556,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "533:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "74727565",
              "id": 557,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "560:4:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "true"
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 567,
              "nodeType": "Block",
              "src": "1091:45:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 562,
                      "name": "contractOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 555,
                      "src": "1102:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 563,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1118:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1118:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1102:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 566,
                  "nodeType": "ExpressionStatement",
                  "src": "1102:26:1"
                }
              ]
            },
            "documentation": {
              "id": 559,
              "nodeType": "StructuredDocumentation",
              "src": "973:91:1",
              "text": "@dev Constructor\n     The deploying account becomes contractOwner"
            },
            "id": 568,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1081:2:1"
            },
            "returnParameters": {
              "id": 561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:0:1"
            },
            "scope": 668,
            "src": "1070:66:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 575,
              "nodeType": "Block",
              "src": "1247:25:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 572,
                      "name": "fund",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 646,
                      "src": "1258:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:6:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "1258:6:1"
                }
              ]
            },
            "documentation": {
              "id": 569,
              "nodeType": "StructuredDocumentation",
              "src": "1144:69:1",
              "text": "@dev Fallback function for funding smart contract."
            },
            "id": 576,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 570,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1227:2:1"
            },
            "returnParameters": {
              "id": 571,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1247:0:1"
            },
            "scope": 668,
            "src": "1219:53:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 585,
              "nodeType": "Block",
              "src": "2011:179:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 580,
                        "name": "operational",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 558,
                        "src": "2030:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "436f6e74726163742069732063757272656e746c79206e6f74206f7065726174696f6e616c",
                        "id": 581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2043:39:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        },
                        "value": "Contract is currently not operational"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a944ac63656791076c14949470b85bdffa60627db8794c94b1d70a12e2e21886",
                          "typeString": "literal_string \"Contract is currently not operational\""
                        }
                      ],
                      "id": 579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2022:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:61:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 583,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:61:1"
                },
                {
                  "id": 584,
                  "nodeType": "PlaceholderStatement",
                  "src": "2094:1:1"
                }
              ]
            },
            "documentation": {
              "id": 577,
              "nodeType": "StructuredDocumentation",
              "src": "1733:240:1",
              "text": "@dev Modifier that requires the \"operational\" boolean variable to be \"true\"\n     This is used on all state changing functions to pause the contract in \n     the event there is an issue that needs to be fixed"
            },
            "id": 586,
            "name": "requireIsOperational",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2008:2:1"
            },
            "src": "1979:211:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 598,
              "nodeType": "Block",
              "src": "2336:99:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 590,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2355:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "2355:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 592,
                          "name": "contractOwner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "2369:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2355:27:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616c6c6572206973206e6f7420636f6e7472616374206f776e6572",
                        "id": 594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2384:30:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        },
                        "value": "Caller is not contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ad5b8255218fc9200bf271049bc5472a1a7a8192290eba60272e432e608ceea3",
                          "typeString": "literal_string \"Caller is not contract owner\""
                        }
                      ],
                      "id": 589,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2347:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2347:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 596,
                  "nodeType": "ExpressionStatement",
                  "src": "2347:68:1"
                },
                {
                  "id": 597,
                  "nodeType": "PlaceholderStatement",
                  "src": "2426:1:1"
                }
              ]
            },
            "documentation": {
              "id": 587,
              "nodeType": "StructuredDocumentation",
              "src": "2198:100:1",
              "text": "@dev Modifier that requires the \"ContractOwner\" account to be the function caller"
            },
            "id": 599,
            "name": "requireContractOwner",
            "nodeType": "ModifierDefinition",
            "overrides": null,
            "parameters": {
              "id": 588,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:2:1"
            },
            "src": "2304:131:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 611,
              "nodeType": "Block",
              "src": "2683:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 607,
                      "name": "operational",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 558,
                      "src": "2694:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 608,
                      "name": "mode",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 602,
                      "src": "2708:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2694:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 610,
                  "nodeType": "ExpressionStatement",
                  "src": "2694:18:1"
                }
              ]
            },
            "documentation": {
              "id": 600,
              "nodeType": "StructuredDocumentation",
              "src": "2445:157:1",
              "text": "@dev Sets contract operations on/off\n\n    * When operational mode is disabled, all write transactions except for this one will fail"
            },
            "functionSelector": "110466ed",
            "id": 612,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 605,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 604,
                  "name": "requireContractOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 599,
                  "src": "2662:20:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2662:20:1"
              }
            ],
            "name": "setOperatingStatus",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 602,
                  "name": "mode",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 612,
                  "src": "2642:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 601,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2642:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2640:12:1"
            },
            "returnParameters": {
              "id": 606,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2683:0:1"
            },
            "scope": 668,
            "src": "2612:108:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 616,
              "nodeType": "Block",
              "src": "3211:8:1",
              "statements": []
            },
            "documentation": {
              "id": 613,
              "nodeType": "StructuredDocumentation",
              "src": "3029:132:1",
              "text": "@dev Add an airline to the registration queue\n     Can only be called from FlightSuretyApp contract\n\n    "
            },
            "functionSelector": "63e29a3f",
            "id": 617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerAirline",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 614,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3194:2:1"
            },
            "returnParameters": {
              "id": 615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3211:0:1"
            },
            "scope": 668,
            "src": "3170:49:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 621,
              "nodeType": "Block",
              "src": "3326:10:1",
              "statements": []
            },
            "documentation": {
              "id": 618,
              "nodeType": "StructuredDocumentation",
              "src": "3228:57:1",
              "text": "@dev Buy insurance for a flight\n\n    "
            },
            "functionSelector": "a6f2ae3a",
            "id": 622,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buy",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3306:2:1"
            },
            "returnParameters": {
              "id": 620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3326:0:1"
            },
            "scope": 668,
            "src": "3294:42:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 626,
              "nodeType": "Block",
              "src": "3443:8:1",
              "statements": []
            },
            "documentation": {
              "id": 623,
              "nodeType": "StructuredDocumentation",
              "src": "3344:53:1",
              "text": " @dev Credits payouts to insurees"
            },
            "functionSelector": "36cee484",
            "id": 627,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "creditInsurees",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 624,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3426:2:1"
            },
            "returnParameters": {
              "id": 625,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3443:0:1"
            },
            "scope": 668,
            "src": "3403:48:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 631,
              "nodeType": "Block",
              "src": "3576:8:1",
              "statements": []
            },
            "documentation": {
              "id": 628,
              "nodeType": "StructuredDocumentation",
              "src": "3465:76:1",
              "text": " @dev Transfers eligible payout funds to insuree\n\n    "
            },
            "functionSelector": "1b9265b8",
            "id": 632,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pay",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3559:2:1"
            },
            "returnParameters": {
              "id": 630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3576:0:1"
            },
            "scope": 668,
            "src": "3547:37:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 640,
              "nodeType": "Block",
              "src": "4095:37:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 638,
                    "name": "operational",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 558,
                    "src": "4113:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 637,
                  "id": 639,
                  "nodeType": "Return",
                  "src": "4106:18:1"
                }
              ]
            },
            "documentation": {
              "id": 633,
              "nodeType": "StructuredDocumentation",
              "src": "3894:122:1",
              "text": "@dev Get operating status of contract\n\n    * @return A bool that is the current operating status"
            },
            "functionSelector": "cd905dff",
            "id": 641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOperational",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4050:2:1"
            },
            "returnParameters": {
              "id": 637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 636,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 641,
                  "src": "4083:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 635,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4083:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4082:6:1"
            },
            "scope": 668,
            "src": "4028:104:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 645,
              "nodeType": "Block",
              "src": "4369:8:1",
              "statements": []
            },
            "documentation": {
              "id": 642,
              "nodeType": "StructuredDocumentation",
              "src": "4139:190:1",
              "text": "@dev Initial funding for the insurance. Unless there are too many delayed flights\n     resulting in insurance payouts, the contract should be self-sustaining\n\n    "
            },
            "functionSelector": "b60d4288",
            "id": 646,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fund",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 643,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4351:2:1"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4369:0:1"
            },
            "scope": 668,
            "src": "4338:39:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 666,
              "nodeType": "Block",
              "src": "4524:81:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 660,
                            "name": "airline",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 648,
                            "src": "4569:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 661,
                            "name": "flight",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 650,
                            "src": "4578:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 662,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "4586:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 658,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "4552:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4552:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4552:44:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 657,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "4542:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4542:55:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 656,
                  "id": 665,
                  "nodeType": "Return",
                  "src": "4535:62:1"
                }
              ]
            },
            "documentation": null,
            "id": 667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getFlightKey",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 648,
                  "name": "airline",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4417:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 650,
                  "name": "flight",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4443:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 649,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 652,
                  "name": "timestamp",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4474:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4474:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4406:86:1"
            },
            "returnParameters": {
              "id": 656,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 655,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 667,
                  "src": "4515:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 654,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4515:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4514:9:1"
            },
            "scope": 668,
            "src": "4385:220:1",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 669,
        "src": "55:4555:1"
      }
    ],
    "src": "0:4614:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-12T18:26:57.431Z",
  "devdoc": {
    "methods": {
      "buy()": {
        "details": "Buy insurance for a flight     "
      },
      "constructor": {
        "details": "Constructor     The deploying account becomes contractOwner"
      },
      "creditInsurees()": {
        "details": "Credits payouts to insurees"
      },
      "fund()": {
        "details": "Initial funding for the insurance. Unless there are too many delayed flights     resulting in insurance payouts, the contract should be self-sustaining     "
      },
      "isOperational()": {
        "details": "Get operating status of contract ",
        "returns": {
          "_0": "A bool that is the current operating status"
        }
      },
      "pay()": {
        "details": "Transfers eligible payout funds to insuree     "
      },
      "registerAirline()": {
        "details": "Add an airline to the registration queue     Can only be called from FlightSuretyApp contract     "
      },
      "setOperatingStatus(bool)": {
        "details": "Sets contract operations on/off     * When operational mode is disabled, all write transactions except for this one will fail"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}